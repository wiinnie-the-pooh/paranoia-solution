// VulaSHAKA (Simultaneous Neutronic, Fuel Performance, Heat And Kinetics Analysis)
// Copyright (C) 2009-2010 Pebble Bed Modular Reactor (Pty) Limited (PBMR)
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// 
// See https://vulashaka.svn.sourceforge.net/svnroot/vulashaka
//
// Author : Alexey PETROV
//


//---------------------------------------------------------------------------
#ifndef __PARALELL_TASK_BASE_IDL__
#define __PARALELL_TASK_BASE_IDL__


//---------------------------------------------------------------------------
#include "TransientObject.idl"


//---------------------------------------------------------------------------
module parallel
{
  interface TaskManager;

  interface PortBase;

  typedef sequence< PortBase > Ports;

  interface Link;

  interface TaskBase : TransientObject
  {
    void init();

    void invoke( in TaskManager theTaskManager );

    PortBase get_input_port( in string theName );

    Ports get_input_ports();

    boolean connect_input( in PortBase thePort, 
                           in Link theLink, 
                           in PortBase theOppositePort );

    PortBase get_output_port( in string theName );

    Ports get_output_ports();

    boolean connect_output( in PortBase thePort, 
                            in Link theLink, 
                            in PortBase theOppositePort );
  };
};


//---------------------------------------------------------------------------
#endif  // __PARALELL_TASK_BASE_IDL__
