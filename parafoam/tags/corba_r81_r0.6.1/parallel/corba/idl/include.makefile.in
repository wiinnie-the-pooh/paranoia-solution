## VulaSHAKA (Simultaneous Neutronic, Fuel Performance, Heat And Kinetics Analysis)
## Copyright (C) 2009-2010 Pebble Bed Modular Reactor (Pty) Limited (PBMR)
## 
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.
## 
## See https://vulashaka.svn.sourceforge.net/svnroot/vulashaka
##
## Author : Alexey PETROV
##


#--------------------------------------------------------------------------------------
ifeq "$(parallel_corba_idl_include_makefile)xx" "xx"
parallel_corba_idl_include_makefile = "included"
#--------------------------------------------------------------------------------------


#--------------------------------------------------------------------------------------
parallel_corba_root_dir := $(parallel_corba_idl_root_dir)/..

include $(parallel_corba_root_dir)/include.makefile


#------------------------------------------------------------------------------
CPPFLAGS += -I@abs_top_builddir@/parallel/corba/idl
IDLFLAGS += -I@abs_top_builddir@/parallel/corba/idl

ifneq "$(parallel_corba_idl_root_dir)" "."
  LDFLAGS += -L@abs_top_builddir@/lib -lparallel_idl
endif


#--------------------------------------------------------------------------------------
.PRECIOUS: %SK.cc

$(idl_target): $(patsubst %.idl, %SK.o, $(IDL_FILES))
	gcc -shared $^ $(LDFLAGS) -o $@

%SK.cc: %.idl
	@IDL@ -bcxx -Wbtp @OMNIORB_IDLCXXFLAGS@ $(IDLFLAGS) $<

%SK.o: %SK.cc
	gcc -x c++  $(CPPFLAGS) $(CXXFLAGS) -c $<

.depidl: $(IDL_FILES)
	@echo "" > $@
	@for dep in $^ dummy; do \
	  if [ $${dep} != "dummy" ]; then \
	    echo Building dependencies for $${dep}; \
	    gcc  -MMD -x c $${dep} 2>/dev/null | \
	    sed 's/\.o/\SK.cc/' >>$@; \
	  fi; \
	done ;

-include .depidl

clean-idl:
	rm -f  *.o *.d *.hh *.cc .depidl *~ $(idl_target)


#--------------------------------------------------------------------------------------
endif
#--------------------------------------------------------------------------------------
