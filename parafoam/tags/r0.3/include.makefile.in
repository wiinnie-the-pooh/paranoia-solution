## Copyright (C) 2009 Pebble Bed Modular Reactor (Pty) Limited (PBMR)
## 
## This library is free software; you can redistribute it and/or 
## modify it under the terms of the GNU Lesser General Public 
## License as published by the Free Software Foundation; either 
## version 2.1 of the License. 
## 
## This library is distributed in the hope that it will be useful, 
## but WITHOUT ANY WARRANTY; without even the implied warranty of 
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
## Lesser General Public License for more details. 
## 
## You should have received a copy of the GNU Lesser General Public 
## License along with this library; if not, write to the Free Software 
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA 
## 
## See http://sourceforge.net/projects/pyfoam
##
## Author : Alexey PETROV
##


#--------------------------------------------------------------------------------------
$(libso): $(patsubst %.cpp, %.o, $(wildcard *.cpp))
	gcc -shared $^ $(LDFLAGS) -o $(parallel_root_dir)/lib/$@

$(sexe): $(patsubst %.cpp, %.o, $(wildcard *.cpp))
	gcc $(LDFLAGS) $^ -o $(parallel_root_dir)/bin/$@

%.o: %.cpp
	gcc -x c++ $(CPPFLAGS) -fPIC -c -MMD $<

ifneq "$(wildcard *.d)" "" # To avoid "include's" warning in case of empty folder
include $(wildcard *.d)
endif


#--------------------------------------------------------------------------------------
RECURSIVE_TARGETS = all-recursive clean-recursive

all: $(libso) $(sexe) all-recursive

clean: clean-recursive
	rm -f *.o *.d *~ 

$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    break; \
	  fi; \
	  if ! test -f "$$subdir/Makefile"; then \
	    continue; \
	  fi; \
	  echo "(cd $$subdir && $(MAKE) $$target)"; \
	  (cd $$subdir && $(MAKE) $$target) \
	  || eval $$failcom; \
	done;


#--------------------------------------------------------------------------------------
